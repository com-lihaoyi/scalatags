//| mill-version: 1.0.0-RC1-24-d74b52
//| mvnDeps:
//| - com.github.lolgab::mill-mima_mill1.0.0-RC1:0.2.0-M1
//| - "com.lihaoyi::mill-contrib-buildinfo:"
package build
import mill._, scalalib._, scalajslib._, scalanativelib._, publish._
import mill.contrib.buildinfo._
import mill.main.VcsVersion

import com.github.lolgab.mill.mima._
import mill.scalalib.api.JvmWorkerUtil.isScala3

val dottyVersions = sys.props.get("dottyVersion").toList

val scalaVersions = List("2.12.20", "2.13.16", "3.3.5") ++ dottyVersions

trait ScalatagsPublishModule extends CrossScalaModule with PublishModule with PlatformScalaModule with Mima{
  def mvnDeps = Seq(
    mvn"com.lihaoyi::sourcecode::0.4.0",
    mvn"com.lihaoyi::geny::1.1.0",
  )

  def compileMvnDeps = Task {
    super.compileMvnDeps() ++
      Option.when(!isScala3(crossScalaVersion))(mvn"org.scala-lang:scala-reflect:${scalaVersion()}")
  }

  def publishVersion = VcsVersion.vcsState().format()
  def pomSettings = PomSettings(
    description = artifactName(),
    organization = "com.lihaoyi",
    url = "https://github.com/com-lihaoyi/scalatags",
    licenses = Seq(License.MIT),
    versionControl = VersionControl(
      browsableRepository = Some("git://github.com/com-lihaoyi/scalatags.git"),
      connection = Some("scm:git://github.com/com-lihaoyi/scalatags.git")
    ),
    developers = Seq(
      Developer("lihaoyi", "Li Haoyi", "https://github.com/lihaoyi")
    )
  )

  def mimaReportBinaryIssues() =
    if (crossScalaVersion.startsWith("3.") || this.isInstanceOf[ScalaNativeModule] || this.isInstanceOf[ScalaJSModule]) Task.Command{}
    else super.mimaReportBinaryIssues()

  def mimaPreviousVersions = Seq("0.11.0", "0.11.1", "0.12.0")
}

trait CommonTestModule extends ScalaModule with TestModule.Utest with BuildInfo {
  def mvnDeps = Seq(
    mvn"com.lihaoyi::utest::0.8.3",
    mvn"org.scala-lang.modules::scala-xml:${if(scalaVersion().startsWith("2.11.")) "1.3.0" else "2.1.0"}"
  )

  override def buildInfoPackageName = "scalatags"
  override def buildInfoMembers = Seq(
    BuildInfo.Value("scalaMajorVersion", scalaVersion().split('.').head)
  )

  override def resources = Task{
    super[BuildInfo].resources() ++ super[Utest].resources()
  }
}


object scalatags extends Module {
  object jvm extends Cross[JvmScalatagsModule](scalaVersions)
  trait JvmScalatagsModule
    extends ScalatagsPublishModule {

    object test extends ScalaTests with CommonTestModule
  }

  object js extends Cross[JSScalatagsModule](scalaVersions)
  trait JSScalatagsModule
    extends ScalaJSModule with ScalatagsPublishModule {
    def scalaJSVersion = "1.19.0"
    def mvnDeps = super.mvnDeps() ++ Seq(mvn"org.scala-js::scalajs-dom::2.3.0")
    private def sourceMapOptions = Task.Anon {
      val vcsState = VcsVersion.vcsState()
      vcsState.lastTag.collect {
        case tag if vcsState.commitsSinceLastTag == 0 =>
          val baseUrl =
            pomSettings().url.replace("github.com", "raw.githubusercontent.com")
          val sourcesOptionName =
            if (isScala3(crossScalaVersion))
              "-scalajs-mapSourceURI"
            else "-P:scalajs:mapSourceURI"
          s"$sourcesOptionName:${Task.workspace.toIO.toURI}->$baseUrl/$tag/"
      }
    }
    override def scalacOptions = super.scalacOptions() ++ sourceMapOptions()

    object test extends ScalaJSTests with CommonTestModule{
      def mvnDeps = super.mvnDeps() ++ Seq(mvn"org.scala-js::scalajs-env-jsdom-nodejs:1.1.0").map(_.withDottyCompat(crossScalaVersion))
      def jsEnvConfig = mill.scalajslib.api.JsEnvConfig.JsDom()
    }
  }

  object native extends Cross[NativeScalatagsModule](scalaVersions)
  trait NativeScalatagsModule extends ScalaNativeModule with ScalatagsPublishModule {
    def scalaNativeVersion = "0.5.7"
    // No released Scala Native Scala 3 version yet
    def mimaPreviousArtifacts = if(isScala3(crossScalaVersion)) Seq.empty[Dep] else super.mimaPreviousArtifacts()
    object test extends ScalaNativeTests with CommonTestModule
  }
}

object example extends ScalaJSModule{
  def scalaVersion = scalaVersions.head
  def scalaJSVersion = "1.19.0"
  def moduleDeps = Seq(scalatags.js(scalaVersions.head))
}
