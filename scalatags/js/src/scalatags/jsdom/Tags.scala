
package scalatags
package jsdom
import org.scalajs.dom
import scalatags.generic.Util
trait Tags extends generic.Tags[dom.Element, dom.Element, dom.Node] with TagFactory{
  // Root Element
  lazy val html: ConcreteHtmlTag[dom.html.Html] = typedTag[dom.html.Html]("html")
  // Document Metadata
  lazy val head: ConcreteHtmlTag[dom.html.Head] = typedTag[dom.html.Head]("head")
  lazy val base: ConcreteHtmlTag[dom.html.Base] = typedTag[dom.html.Base]("base", void = true)
  lazy val link: ConcreteHtmlTag[dom.html.Link] = typedTag[dom.html.Link]("link", void = true)
  lazy val meta: ConcreteHtmlTag[dom.html.Meta] = typedTag[dom.html.Meta]("meta", void = true)
  // Scripting
  lazy val script: ConcreteHtmlTag[dom.html.Script] = typedTag[dom.html.Script]("script")
  // Sections
  lazy val body: ConcreteHtmlTag[dom.html.Body] = typedTag[dom.html.Body]("body")
  lazy val h1 = typedTag[dom.html.Heading]("h1")
  lazy val h2 = typedTag[dom.html.Heading]("h2")
  lazy val h3 = typedTag[dom.html.Heading]("h3")
  lazy val h4 = typedTag[dom.html.Heading]("h4")
  lazy val h5 = typedTag[dom.html.Heading]("h5")
  lazy val h6 = typedTag[dom.html.Heading]("h6")
  lazy val header: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("header")
  lazy val footer: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("footer")
  // Grouping content
  lazy val p: ConcreteHtmlTag[dom.html.Paragraph] = typedTag[dom.html.Paragraph]("p")
  lazy val hr: ConcreteHtmlTag[dom.html.HR] = typedTag[dom.html.HR]("hr", void = true)
  lazy val pre: ConcreteHtmlTag[dom.html.Pre] = typedTag[dom.html.Pre]("pre")
  lazy val blockquote: ConcreteHtmlTag[dom.html.Quote] = typedTag[dom.html.Quote]("blockquote")
  lazy val ol: ConcreteHtmlTag[dom.html.OList] = typedTag[dom.html.OList]("ol")
  lazy val ul: ConcreteHtmlTag[dom.html.UList] = typedTag[dom.html.UList]("ul")
  lazy val li: ConcreteHtmlTag[dom.html.LI] = typedTag[dom.html.LI]("li")
  lazy val dl: ConcreteHtmlTag[dom.html.DList] = typedTag[dom.html.DList]("dl")
  lazy val dt: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("dt")
  lazy val dd: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("dd")
  lazy val figure: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("figure")
  lazy val figcaption: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("figcaption")
  lazy val div: ConcreteHtmlTag[dom.html.Div] = typedTag[dom.html.Div]("div")
  // Text-level semantics
  lazy val a: ConcreteHtmlTag[dom.html.Anchor] = typedTag[dom.html.Anchor]("a")
  lazy val em: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("em")
  lazy val strong: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("strong")
  lazy val small: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("small")
  lazy val s: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("s")
  lazy val cite: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("cite")
  lazy val code: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("code")
  lazy val sub: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("sub")
  lazy val sup: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("sup")
  lazy val i: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("i")
  lazy val b: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("b")
  lazy val u: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("u")
  lazy val span: ConcreteHtmlTag[dom.html.Span] = typedTag[dom.html.Span]("span")
  lazy val br: ConcreteHtmlTag[dom.html.BR] = typedTag[dom.html.BR]("br", void = true)
  lazy val wbr: ConcreteHtmlTag[dom.html.Element] = typedTag[dom.html.Element]("wbr", void = true)
  // Edits
  lazy val ins: ConcreteHtmlTag[dom.html.Mod] = typedTag[dom.html.Mod]("ins")
  lazy val del: ConcreteHtmlTag[dom.html.Mod] = typedTag[dom.html.Mod]("del")
  // Embedded content
  lazy val img: ConcreteHtmlTag[dom.html.Image] = typedTag[dom.html.Image]("img", void = true)
  lazy val iframe: ConcreteHtmlTag[dom.html.IFrame] = typedTag[dom.html.IFrame]("iframe")
  lazy val embed: ConcreteHtmlTag[dom.html.Embed] = typedTag[dom.html.Embed]("embed", void = true)
  lazy val `object` = typedTag[dom.html.Object]("object")
  lazy val param: ConcreteHtmlTag[dom.html.Param] = typedTag[dom.html.Param]("param", void = true)
  lazy val video: ConcreteHtmlTag[dom.html.Video] = typedTag[dom.html.Video]("video")
  lazy val audio: ConcreteHtmlTag[dom.html.Audio] = typedTag[dom.html.Audio]("audio")
  lazy val source: ConcreteHtmlTag[dom.html.Source] = typedTag[dom.html.Source]("source", void = true)
  lazy val track: ConcreteHtmlTag[dom.html.Track] = typedTag[dom.html.Track]("track", void = true)
  lazy val canvas: ConcreteHtmlTag[dom.html.Canvas] = typedTag[dom.html.Canvas]("canvas")
  lazy val map: ConcreteHtmlTag[dom.html.Map] = typedTag[dom.html.Map]("map")
  lazy val area: ConcreteHtmlTag[dom.html.Area] = typedTag[dom.html.Area]("area", void = true)
  // Tabular data
  lazy val table: ConcreteHtmlTag[dom.html.Table] = typedTag[dom.html.Table]("table")
  lazy val caption: ConcreteHtmlTag[dom.html.TableCaption] = typedTag[dom.html.TableCaption]("caption")
  lazy val colgroup: ConcreteHtmlTag[dom.html.TableCol] = typedTag[dom.html.TableCol]("colgroup")
  lazy val col: ConcreteHtmlTag[dom.html.TableCol] = typedTag[dom.html.TableCol]("col", void = true)
  lazy val tbody: ConcreteHtmlTag[dom.html.TableSection] = typedTag[dom.html.TableSection]("tbody")
  lazy val thead: ConcreteHtmlTag[dom.html.TableSection] = typedTag[dom.html.TableSection]("thead")
  lazy val tfoot: ConcreteHtmlTag[dom.html.TableSection] = typedTag[dom.html.TableSection]("tfoot")
  lazy val tr: ConcreteHtmlTag[dom.html.TableRow] = typedTag[dom.html.TableRow]("tr")
  lazy val td: ConcreteHtmlTag[dom.html.TableCell] = typedTag[dom.html.TableCell]("td")
  lazy val th: ConcreteHtmlTag[dom.html.TableCell] = typedTag[dom.html.TableCell]("th")
  // Forms
  lazy val form: ConcreteHtmlTag[dom.html.Form] = typedTag[dom.html.Form]("form")
  lazy val fieldset: ConcreteHtmlTag[dom.html.FieldSet] = typedTag[dom.html.FieldSet]("fieldset")
  lazy val legend: ConcreteHtmlTag[dom.html.Legend] = typedTag[dom.html.Legend]("legend")
  lazy val label: ConcreteHtmlTag[dom.html.Label] = typedTag[dom.html.Label]("label")
  lazy val input: ConcreteHtmlTag[dom.html.Input] = typedTag[dom.html.Input]("input", void = true)
  lazy val button: ConcreteHtmlTag[dom.html.Button] = typedTag[dom.html.Button]("button")
  lazy val select: ConcreteHtmlTag[dom.html.Select] = typedTag[dom.html.Select]("select")
  lazy val datalist: ConcreteHtmlTag[dom.html.DataList] = typedTag[dom.html.DataList]("datalist")
  lazy val optgroup: ConcreteHtmlTag[dom.html.OptGroup] = typedTag[dom.html.OptGroup]("optgroup")
  lazy val option: ConcreteHtmlTag[dom.html.Option] = typedTag[dom.html.Option]("option")
  lazy val textarea: ConcreteHtmlTag[dom.html.TextArea] = typedTag[dom.html.TextArea]("textarea")
}
