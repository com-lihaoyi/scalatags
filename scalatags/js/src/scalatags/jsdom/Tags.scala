
package scalatags
package jsdom
import org.scalajs.dom
import scalatags.generic.Util
trait Tags extends generic.Tags[dom.Element, dom.Element, dom.Node] with TagFactory{
  // Root Element
  lazy val html: ConcreteHtmlTag[dom.html.Html] = typedTag("html")
  // Document Metadata
  lazy val head: ConcreteHtmlTag[dom.html.Head] = typedTag("head")
  lazy val base: ConcreteHtmlTag[dom.html.Base] = typedTag("base", void = true)
  lazy val link: ConcreteHtmlTag[dom.html.Link] = typedTag("link", void = true)
  lazy val meta: ConcreteHtmlTag[dom.html.Meta] = typedTag("meta", void = true)
  // Scripting
  lazy val script: ConcreteHtmlTag[dom.html.Script] = typedTag("script")
  // Sections
  lazy val body: ConcreteHtmlTag[dom.html.Body] = typedTag("body")
  lazy val h1: ConcreteHtmlTag[dom.html.Heading] = typedTag("h1")
  lazy val h2: ConcreteHtmlTag[dom.html.Heading] = typedTag("h2")
  lazy val h3: ConcreteHtmlTag[dom.html.Heading] = typedTag("h3")
  lazy val h4: ConcreteHtmlTag[dom.html.Heading] = typedTag("h4")
  lazy val h5: ConcreteHtmlTag[dom.html.Heading] = typedTag("h5")
  lazy val h6: ConcreteHtmlTag[dom.html.Heading] = typedTag("h6")
  lazy val header: ConcreteHtmlTag[dom.html.Element] = typedTag("header")
  lazy val footer: ConcreteHtmlTag[dom.html.Element] = typedTag("footer")
  // Grouping content
  lazy val p: ConcreteHtmlTag[dom.html.Paragraph] = typedTag("p")
  lazy val hr: ConcreteHtmlTag[dom.html.HR] = typedTag("hr", void = true)
  lazy val pre: ConcreteHtmlTag[dom.html.Pre] = typedTag("pre")
  lazy val blockquote: ConcreteHtmlTag[dom.html.Quote] = typedTag("blockquote")
  lazy val ol: ConcreteHtmlTag[dom.html.OList] = typedTag("ol")
  lazy val ul: ConcreteHtmlTag[dom.html.UList] = typedTag("ul")
  lazy val li: ConcreteHtmlTag[dom.html.LI] = typedTag("li")
  lazy val dl: ConcreteHtmlTag[dom.html.DList] = typedTag("dl")
  lazy val dt: ConcreteHtmlTag[dom.html.Element] = typedTag("dt")
  lazy val dd: ConcreteHtmlTag[dom.html.Element] = typedTag("dd")
  lazy val figure: ConcreteHtmlTag[dom.html.Element] = typedTag("figure")
  lazy val figcaption: ConcreteHtmlTag[dom.html.Element] = typedTag("figcaption")
  lazy val div: ConcreteHtmlTag[dom.html.Div] = typedTag("div")
  // Text-level semantics
  lazy val a: ConcreteHtmlTag[dom.html.Anchor] = typedTag("a")
  lazy val em: ConcreteHtmlTag[dom.html.Element] = typedTag("em")
  lazy val strong: ConcreteHtmlTag[dom.html.Element] = typedTag("strong")
  lazy val small: ConcreteHtmlTag[dom.html.Element] = typedTag("small")
  lazy val s: ConcreteHtmlTag[dom.html.Element] = typedTag("s")
  lazy val cite: ConcreteHtmlTag[dom.html.Element] = typedTag("cite")
  lazy val code: ConcreteHtmlTag[dom.html.Element] = typedTag("code")
  lazy val sub: ConcreteHtmlTag[dom.html.Element] = typedTag("sub")
  lazy val sup: ConcreteHtmlTag[dom.html.Element] = typedTag("sup")
  lazy val i: ConcreteHtmlTag[dom.html.Element] = typedTag("i")
  lazy val b: ConcreteHtmlTag[dom.html.Element] = typedTag("b")
  lazy val u: ConcreteHtmlTag[dom.html.Element] = typedTag("u")
  lazy val span: ConcreteHtmlTag[dom.html.Span] = typedTag("span")
  lazy val br: ConcreteHtmlTag[dom.html.BR] = typedTag("br", void = true)
  lazy val wbr: ConcreteHtmlTag[dom.html.Element] = typedTag("wbr", void = true)
  // Edits
  lazy val ins: ConcreteHtmlTag[dom.html.Mod] = typedTag("ins")
  lazy val del: ConcreteHtmlTag[dom.html.Mod] = typedTag("del")
  // Embedded content
  lazy val img: ConcreteHtmlTag[dom.html.Image] = typedTag("img", void = true)
  lazy val iframe: ConcreteHtmlTag[dom.html.IFrame] = typedTag("iframe")
  lazy val embed: ConcreteHtmlTag[dom.html.Embed] = typedTag("embed", void = true)
  lazy val `object`: ConcreteHtmlTag[dom.html.Object] = typedTag("object")
  lazy val param: ConcreteHtmlTag[dom.html.Param] = typedTag("param", void = true)
  lazy val video: ConcreteHtmlTag[dom.html.Video] = typedTag("video")
  lazy val audio: ConcreteHtmlTag[dom.html.Audio] = typedTag("audio")
  lazy val source: ConcreteHtmlTag[dom.html.Source] = typedTag("source", void = true)
  lazy val track: ConcreteHtmlTag[dom.html.Track] = typedTag("track", void = true)
  lazy val canvas: ConcreteHtmlTag[dom.html.Canvas] = typedTag("canvas")
  lazy val map: ConcreteHtmlTag[dom.html.Map] = typedTag("map")
  lazy val area: ConcreteHtmlTag[dom.html.Area] = typedTag("area", void = true)
  // Tabular data
  lazy val table: ConcreteHtmlTag[dom.html.Table] = typedTag("table")
  lazy val caption: ConcreteHtmlTag[dom.html.TableCaption] = typedTag("caption")
  lazy val colgroup: ConcreteHtmlTag[dom.html.TableCol] = typedTag("colgroup")
  lazy val col: ConcreteHtmlTag[dom.html.TableCol] = typedTag("col", void = true)
  lazy val tbody: ConcreteHtmlTag[dom.html.TableSection] = typedTag("tbody")
  lazy val thead: ConcreteHtmlTag[dom.html.TableSection] = typedTag("thead")
  lazy val tfoot: ConcreteHtmlTag[dom.html.TableSection] = typedTag("tfoot")
  lazy val tr: ConcreteHtmlTag[dom.html.TableRow] = typedTag("tr")
  lazy val td: ConcreteHtmlTag[dom.html.TableCell] = typedTag("td")
  lazy val th: ConcreteHtmlTag[dom.html.TableCell] = typedTag("th")
  // Forms
  lazy val form: ConcreteHtmlTag[dom.html.Form] = typedTag("form")
  lazy val fieldset: ConcreteHtmlTag[dom.html.FieldSet] = typedTag("fieldset")
  lazy val legend: ConcreteHtmlTag[dom.html.Legend] = typedTag("legend")
  lazy val label: ConcreteHtmlTag[dom.html.Label] = typedTag("label")
  lazy val input: ConcreteHtmlTag[dom.html.Input] = typedTag("input", void = true)
  lazy val button: ConcreteHtmlTag[dom.html.Button] = typedTag("button")
  lazy val select: ConcreteHtmlTag[dom.html.Select] = typedTag("select")
  lazy val datalist: ConcreteHtmlTag[dom.html.DataList] = typedTag("datalist")
  lazy val optgroup: ConcreteHtmlTag[dom.html.OptGroup] = typedTag("optgroup")
  lazy val option: ConcreteHtmlTag[dom.html.Option] = typedTag("option")
  lazy val textarea: ConcreteHtmlTag[dom.html.TextArea] = typedTag("textarea")
}
