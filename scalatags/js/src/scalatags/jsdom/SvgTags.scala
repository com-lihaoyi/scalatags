package scalatags
package jsdom
import org.scalajs.dom
import scalatags.generic.{Namespace, Util}
trait SvgTags extends generic.SvgTags[dom.Element, dom.Element, dom.Node] with TagFactory{
  implicit lazy val svgNamespaceConfig: Namespace = Namespace.svgNamespaceConfig
  lazy val altGlyph = typedTag[dom.svg.Element]("altGlyph")
  lazy val altGlyphDef = typedTag[dom.svg.Element]("altGlyphDef")
  lazy val altGlyphItem = typedTag[dom.svg.Element]("altGlyphItem")
  lazy val animate = typedTag[dom.svg.Element]("animate")
  lazy val animateMotion = typedTag[dom.svg.Element]("animateMotion")
  lazy val animateTransform = typedTag[dom.svg.Element]("animateTransform")
  lazy val circle = typedTag[dom.svg.Circle]("circle")
  lazy val clipPath = typedTag[dom.svg.ClipPath]("clipPath")
  lazy val `color-profile` = typedTag[dom.svg.Element]("color-profile")
  lazy val cursor = typedTag[dom.svg.Element]("cursor")
  lazy val defs = typedTag[dom.svg.Defs]("defs")
  lazy val desc = typedTag[dom.svg.Desc]("desc")
  lazy val ellipse = typedTag[dom.svg.Ellipse]("ellipse")
  lazy val feBlend = typedTag[dom.svg.FEBlend]("feBlend")
  lazy val feColorMatrix = typedTag[dom.svg.FEColorMatrix]("feColorMatrix")
  lazy val feComponentTransfer = typedTag[dom.svg.ComponentTransferFunction]("feComponentTransfer")
  lazy val feComposite = typedTag[dom.svg.FEComposite]("feComposite")
  lazy val feConvolveMatrix = typedTag[dom.svg.FEConvolveMatrix]("feConvolveMatrix")
  lazy val feDiffuseLighting = typedTag[dom.svg.FEDiffuseLighting]("feDiffuseLighting")
  lazy val feDisplacementMap = typedTag[dom.svg.FEDisplacementMap]("feDisplacementMap")
  lazy val feDistantLighting = typedTag[dom.svg.FEDistantLight]("feDistantLighting")
  lazy val feFlood = typedTag[dom.svg.FEFlood]("feFlood")
  lazy val feFuncA = typedTag[dom.svg.FEFuncA]("feFuncA")
  lazy val feFuncB = typedTag[dom.svg.FEFuncB]("feFuncB")
  lazy val feFuncG = typedTag[dom.svg.FEFuncG]("feFuncG")
  lazy val feFuncR = typedTag[dom.svg.FEFuncR]("feFuncR")
  lazy val feGaussianBlur = typedTag[dom.svg.FEGaussianBlur]("feGaussianBlur")
  lazy val feImage = typedTag[dom.svg.FEImage]("feImage")
  lazy val feMerge = typedTag[dom.svg.FEMerge]("feMerge")
  lazy val feMergeNode = typedTag[dom.svg.FEMergeNode]("feMergeNode")
  lazy val feMorphology = typedTag[dom.svg.FEMorphology]("feMorphology")
  lazy val feOffset = typedTag[dom.svg.FEOffset]("feOffset")
  lazy val fePointLight = typedTag[dom.svg.FEPointLight]("fePointLight")
  lazy val feSpecularLighting = typedTag[dom.svg.FESpecularLighting]("feSpecularLighting")
  lazy val feSpotlight = typedTag[dom.svg.FESpotLight]("feSpotlight")
  lazy val feTile = typedTag[dom.svg.FETile]("feTile")
  lazy val feTurbulance = typedTag[dom.svg.FETurbulence]("feTurbulance")
  lazy val filter = typedTag[dom.svg.Filter]("filter")
  lazy val font = typedTag[dom.svg.Element]("font")
  lazy val `font-face` = typedTag[dom.svg.Element]("font-face")
  lazy val `font-face-format` = typedTag[dom.svg.Element]("font-face-format")
  lazy val `font-face-name` = typedTag[dom.svg.Element]("font-face-name")
  lazy val `font-face-src` = typedTag[dom.svg.Element]("font-face-src")
  lazy val `font-face-uri` = typedTag[dom.svg.Element]("font-face-uri")
  lazy val foreignObject = typedTag[dom.svg.Element]("foreignObject")
  lazy val g = typedTag[dom.svg.G]("g")
  lazy val glyph = typedTag[dom.svg.Element]("glyph")
  lazy val glyphRef = typedTag[dom.svg.Element]("glyphRef")
  lazy val hkern = typedTag[dom.svg.Element]("hkern")
  lazy val image = typedTag[dom.svg.Image]("image")
  lazy val line = typedTag[dom.svg.Line]("line")
  lazy val linearGradient = typedTag[dom.svg.LinearGradient]("linearGradient")
  lazy val marker = typedTag[dom.svg.Marker]("marker")
  lazy val mask = typedTag[dom.svg.Mask]("mask")
  lazy val metadata = typedTag[dom.svg.Metadata]("metadata")
  lazy val `missing-glyph` = typedTag[dom.svg.Element]("missing-glyph")
  lazy val mpath = typedTag[dom.svg.Element]("mpath")
  lazy val path = typedTag[dom.svg.Path]("path")
  lazy val pattern = typedTag[dom.svg.Pattern]("pattern")
  lazy val polygon = typedTag[dom.svg.Polygon]("polygon")
  lazy val polyline = typedTag[dom.svg.Polyline]("polyline")
  lazy val radialGradient = typedTag[dom.svg.RadialGradient]("radialGradient")
  lazy val rect = typedTag[dom.svg.RectElement]("rect")
  lazy val set = typedTag[dom.svg.Element]("set")
  lazy val stop = typedTag[dom.svg.Stop]("stop")
  lazy val svg = typedTag[dom.svg.SVG]("svg")
  lazy val switch = typedTag[dom.svg.Switch]("switch")
  lazy val symbol = typedTag[dom.svg.Symbol]("symbol")
  lazy val text = typedTag[dom.svg.Text]("text")
  lazy val textPath = typedTag[dom.svg.TextPath]("textPath")
  lazy val tref = typedTag[dom.svg.Element]("tref")
  lazy val tspan = typedTag[dom.svg.TSpan]("tspan")
  lazy val use = typedTag[dom.svg.Use]("use")
  lazy val view = typedTag[dom.svg.View]("view")
  lazy val vkern = typedTag[dom.svg.Element]("vkern")
}
